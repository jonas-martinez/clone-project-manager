#!/bin/bash

# Regex for github https or ssh url
regex="^(http|https|git)(:\/\/|@)([^\/:]+)[\/:]([^\/:]+)\/(.+)(.git)?$"
PROJECTS_FILE="$HOME/.config/Code/User/globalStorage/alefragnani.project-manager/projects.json"
DEFAULT_GIT_HOME="$HOME/dev"
if [ -z "$GIT_HOME" ]; then
    echo "GIT_HOME is not set. Using default value: $DEFAULT_GIT_HOME"
    GIT_HOME="$DEFAULT_GIT_HOME"
fi

url="$1"
# Check if the first argument is a valid url
if [[ $1 =~ $regex ]]; then
    # Extract the parts of the url
    protocol=${BASH_REMATCH[1]}
    separator=${BASH_REMATCH[2]}
    hostname=${BASH_REMATCH[3]}
    user=${BASH_REMATCH[4]}
    repo=${BASH_REMATCH[5]}
    path="$GIT_HOME/$hostname/$user/$repo"

    # Clone the repo
    git clone "$url" "$path"

    # If the clone was successful, then print a success message
    if [ $? -eq 0 ]; then
        echo "Cloned $url"

        # Check if JQ is installed

        if ! command -v jq &> /dev/null
        then
            echo "If you install jq, then the repo will be added to the list of repos in the VSCode's project manager extension"
            exit
        fi
        # adding the repo to the list of repos in /home/shiishii/.config/Code/User/globalStorage/alefragnani.project-manager/projects.json
        # if the repo was not already present
        if ! grep -q "$path" "$PROJECTS_FILE"; then
            # Add the repo to the list of repos
            cat "$PROJECTS_FILE" | jq ". += [{\"name\": \"$repo\", \"rootPath\": \"$path\", \"paths\": [], \"tags\": [\"$user\"]}]" > "$PROJECTS_FILE.tmp"
            mv "$PROJECTS_FILE.tmp" "$PROJECTS_FILE"
        fi
    else
        # If the clone failed, then print an error
        echo "Error cloning $url"
    fi
else
    # If the first argument is not a valid url, then print an error
    echo "Invalid url"
fi
